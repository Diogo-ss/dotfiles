name: ci
on:
  push:
    paths-ignore:
      - '**/README.md'
      - 'lua/hydravim/core/lockfile.lua'
      - '.github/workflows/**'
      - '.stylua.toml'
      - '.gitignore'
    branches:
      - main
jobs:
  luacheck:
      uses: ./.github/workflows/luacheck.yml
  format:
    runs-on: ubuntu-latest
    needs: luacheck
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Format Lua files
        run: |
          curl -O -L https://github.com/JohnnyMorganz/StyLua/releases/download/v0.17.1/stylua-linux-x86_64.zip
          unzip stylua-linux-x86_64.zip
          chmod +x stylua
          ./stylua .
          rm stylua stylua-linux-x86_64.zip

      - name: Format Markdown files
        run: |
          npm install -g prettier
          prettier --write "**/*.md"
          
      - name: Commit files
        run: |
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git
          git add .
          git diff --quiet && git diff --staged --quiet || (git commit -a -m "style: format files [action]"; git push origin HEAD:${GITHUB_REF})
  release:
    runs-on: ubuntu-latest
    needs: format
    steps:
      - uses: actions/checkout@v3
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          tag_prefix: ""
          github_token: ${{ secrets.GH_TOKEN }}
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        id: create-release
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: v${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
      - name: Request doc generation
        if: steps.create-release.outcome == 'success'
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_TOKEN_DOC }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/HydraVim/HydraDoc/dispatches \
            -d '{"event_type":"generate-doc","client_payload":{"unit":false,"integration":true}}'
